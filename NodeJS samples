import * as fs from 'fs';
import * as https from 'https';

const url: string = 'https://example.com/file.txt';
const filePath: string = '/path/to/save/file.txt';
const username: string = 'your_username';
const password: string = 'your_password';

const options: https.RequestOptions = {
  headers: {
    'Authorization': 'Basic ' + Buffer.from(username + ':' + password).toString('base64')
  }
};

const file: fs.WriteStream = fs.createWriteStream(filePath);
https.get(url, options, (response: https.IncomingMessage) => {
  response.pipe(file);
  file.on('finish', () => {
    file.close();
    console.log(`File downloaded to ${filePath}`);
  });
}).on('error', (err: Error) => {
  fs.unlink(filePath, () => {});
  console.error(`Error downloading file: ${err}`);
});


import fs from 'fs';
import unzipper from 'unzip-stream';

const fileReadStream = fs.createReadStream('file.zip');
const extractDirectory = 'extracted';

fileReadStream.pipe(unzipper.Extract({ path: extractDirectory }))
  .on('close', () => {
    console.log('File extracted successfully.');
  })
  .on('error', error => {
    console.error(error);
  });




npm install csv-parse csvtojson json2html


import fs from 'fs';
import csvParse from 'csv-parse';
import csvToJson from 'csvtojson';
import json2html from 'json2html';

const csvFilePath = 'data.csv';
const htmlFilePath = 'table.html';

fs.readFile(csvFilePath, (error, fileData) => {
  if (error) {
    console.error(error);
    return;
  }

  csvParse(fileData, { delimiter: ',' }, (parseError, csvData) => {
    if (parseError) {
      console.error(parseError);
      return;
    }

    csvToJson()
      .fromString(csvData.join('\n'))
      .then(jsonData => {
        const htmlTable = json2html.render(jsonData);
        fs.writeFile(htmlFilePath, htmlTable, error => {
          if (error) {
            console.error(error);
            return;
          }
          console.log(`CSV file converted to HTML table and saved to ${htmlFilePath}`);
        });
      });
  });
});




import https from 'https';
import fs from 'fs';

const username = 'myusername';
const password = 'mypassword';
const options = {
  auth: `${username}:${password}`,
};

https.get('https://example.com/myZipFile.zip', options, (res) => {
  const filename = 'myZipFile.zip';
  const fileStream = fs.createWriteStream(filename);
  res.pipe(fileStream);

  fileStream.on('finish', () => {
    console.log(`${filename} downloaded successfully`);
  });

  fileStream.on('error', (err) => {
    console.error(`Error while writing to ${filename}: ${err}`);
  });
}).on('error', (err) => {
  console.error(`Error while downloading ${filename}: ${err}`);
});


