#!/bin/bash

# Define your function
my_function() {
    # Your function logic here
    sleep 3600  # Simulating a function that takes 1 hour (3600 seconds)
}

# Set the timeout in seconds
timeout_seconds=300

# Call the function with a timeout
timeout "${timeout_seconds}s" my_function

# Check the exit status of the timeout command
exit_status=$?

if [ $exit_status -eq 124 ]; then
    echo "Function timed out after ${timeout_seconds} seconds."
else
    echo "Function completed within ${timeout_seconds} seconds."
fi



timeout 10s bash <<EOT
function echoFooBar {
  echo foo
}

echoFooBar
sleep 20
EOT





#!/bin/bash

# Get the current date
current_date=$(date +%Y-%m-%d)

# Calculate the date 15 days ago
past_date=$(date -d "$current_date - 15 days" +%Y-%m-%d)

echo "Current date: $current_date"
echo "Date 15 days ago: $past_date"






#!/bin/bash

# Define the path of the folder whose size you want to get
folder_path="/path/to/your/folder"

# Use the du command to get the size of the folder in bytes
folder_size_bytes=$(du -s "$folder_path" | awk '{print $1}')

# Convert bytes to megabytes
folder_size_mb=$(echo "scale=2; $folder_size_bytes / 1024 / 1024" | bc)

echo "Size of the folder $folder_path is: ${folder_size_mb} MB"




         pullRequestId=$SYSTEM_PULLREQUEST_PULLREQUESTID
          if [ -n "$pullRequestId" ]; then
                echo "Valid pull request ID: $pullRequestId"
          else
                echo "No valid pull request found."
               
          fi

